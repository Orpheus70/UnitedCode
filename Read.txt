ИМЯ:TOMOM 
ЧТО ДЕЛАЕТ:ВЫПОЛНЯЕТ ЗАПУСК ИЗМЕРНИЯ ТОНОМЕТРА АРТЕРИАЛЬНОГО ДАВЛЕНИЯ
АРГУМЕНТЫ : 
int status- может принимать значения 0 (успех), 1 (ошибка), обозначающие конкретное состояние.
float highAD- представляет собой значение высокого уровня аналогового  измерения. Например, максимальное значение входного сигнала, которое было зафиксировано.
float AD - означать текущий или измеренный уровень аналогового сигнала
float pulse-означать текущий или измеренный уровень аналогового сигнала

LevelMetDoc:
Метод запуска
LMexample()
Запускает скрипт который принимает данные из файла input.txt, с которым он находится в одной папке. 
В файле есть двое данных:
1. Длинна патрубка
2. Есть ли газовая среда.
После чего проиходит изменения, и он выводит длину каждого слоя.

ИМЯ:PulseReader 
ЧТО ДЕЛАЕТ: ВЫПОЛНЯЕТ ЗАПУСК ИЗМЕРНИЯ пульсоксиметра
АРГУМЕНТЫ : 
int status- может принимать значения 0 (успех), 1 (ошибка), обозначающие конкретное состояние.
float* pulse - представляет собой значение пульса.
float* spo2 - представляет собой значение уровня насыщенность крови кислородом(SpO2)

ИМЯ: Port
Функция send_command используется для отправки строки-команды устройству 
с передачей результата через callback-функцию. 
Она принимает два аргумента: char* d — строка команды и 
ResultCallbackPort callback_result — 
указатель на функцию обратного вызова, которая вызывается после выполнения операции. 
Формат callback-функции следующий: void callback_result(int status, 
char* d), где status = 0 означает успешное выполнение, а status = 1 — наличие ошибки.
После вызова функция сразу отправляет тестовый callback callback_result(0, "123"),
 затем делает паузу в 1 секунду. Далее происходит 
 случайная генерация ошибки: с вероятностью 1 из 5 (20%) 
вызывается callback_result(1, nullptr), в остальных случаях — 
callback_result(0, d) с исходной командой.
Функция всегда возвращает 0, а основной результат передаётся через callback. 
Работает только под Windows, так как использует функцию Sleep.
 Предназначена для имитации реального взаимодействия с устройством и 
 отладки обработки асинхронных событий и ошибок.